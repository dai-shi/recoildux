{"version":3,"file":"index.js","sources":["../src/createAtom.ts","../src/useAtom.ts","../src/compat/atom.ts","../src/compat/useRecoilState.ts","../src/compat/RecoilRoot.tsx","../src/compat/isRecoilValue.ts","../src/compat/selector.ts","../src/compat/useRecoilValue.ts","../src/compat/useResetRecoilState.ts","../src/compat/useSetRecoilState.ts"],"sourcesContent":["import { SetStateAction } from 'react';\nimport { createStore } from 'redux';\nimport { PatchedStore, patchStore } from 'reactive-react-redux';\n\nexport type Action<State> = {\n  type: 'SetState';\n  setState: SetStateAction<State>;\n};\n\nexport type Atom<State> = {\n  patchedStore: PatchedStore<State, Action<State>>;\n};\n\nexport const createAtom = <State>(initialState: State): Atom<State> => {\n  const reducer = (state = initialState, action: Action<State>) => {\n    if (!action || action.type !== 'SetState') {\n      return state;\n    }\n    if (typeof action.setState === 'function') {\n      return (action.setState as (prevState: State) => State)(state);\n    }\n    return action.setState as State;\n  };\n  const store = createStore(reducer);\n  const patchedStore = patchStore(store);\n  return { patchedStore };\n};\n","import { SetStateAction, useCallback } from 'react';\nimport { useTrackedState } from 'reactive-react-redux';\n\nimport { Atom, Action } from './createAtom';\n\nexport const useAtom = <State>(atom: Atom<State>) => {\n  const state = useTrackedState(atom.patchedStore);\n  const setState = useCallback((setStateAction: SetStateAction<State>) => {\n    const action: Action<State> = {\n      type: 'SetState',\n      setState: setStateAction,\n    };\n    atom.patchedStore.dispatch(action);\n  }, [atom]);\n  return [state, setState] as const;\n};\n","import { createAtom } from '../createAtom';\n\nexport const ATOM_SYMBOL = Symbol();\n\nexport const atom = <State>(\n  options: { key: string; default: State },\n) => {\n  const a = createAtom(options.default);\n  return {\n    ...a,\n    symbol: ATOM_SYMBOL,\n    key: options.key,\n    initialState: options.default,\n    writable: true,\n  };\n};\n","import { useAtom } from '../useAtom';\n\nexport const useRecoilState = useAtom;\n","/* eslint react/jsx-fragments: off */\n\nimport React from 'react';\n\n// we don't need root for now\nexport const RecoilRoot: React.FC = ({ children }) => (\n  <React.Fragment>{children}</React.Fragment>\n);\n","import { ATOM_SYMBOL } from './atom';\n\nexport const isRecoilValue = (x: unknown) => {\n  try {\n    return (x as { symbol: unknown }).symbol === ATOM_SYMBOL;\n  } catch (e) {\n    return false;\n  }\n};\n","/* eslint no-use-before-define: off, @typescript-eslint/no-use-before-define: off */\n\nimport { SetStateAction } from 'react';\nimport { Dispatch } from 'redux';\n\nimport { Atom, Action, createAtom } from '../createAtom';\nimport { ATOM_SYMBOL } from './atom';\n\ntype Options<State> = {\n  key: string;\n  get: (arg: {\n    get: <S>(a: Atom<S>) => S;\n  }) => State | Promise<State>;\n  set?: (arg: {\n    get: <S>(a: Atom<S>) => S;\n    set: <S>(a: Atom<S>, v: SetStateAction<S>) => void;\n  }, newValue: State) => void;\n};\n\nexport const selector = <State>(\n  options: Options<State>,\n) => {\n  const atoms: Atom<unknown>[] = [];\n  const unsubscribes: (() => void)[] = [];\n  const getGet = <S>(a: Atom<S>) => {\n    if (!atoms.includes(a as Atom<unknown>)) {\n      atoms.push(a as Atom<unknown>);\n      unsubscribes.push(a.patchedStore.subscribe(evaluate));\n    }\n    return a.patchedStore.getState();\n  };\n  const setGet = <S>(a: Atom<S>) => a.patchedStore.getState();\n  const setSet = <S>(a: Atom<S>, v: SetStateAction<S>) => {\n    a.patchedStore.dispatch({\n      type: 'SetState',\n      setState: v,\n    });\n  };\n\n  const atom = createAtom(null as State | null);\n  const origDispatch = atom.patchedStore.dispatch;\n  const evaluate = async () => {\n    origDispatch({\n      type: 'SetState',\n      setState: await options.get({ get: getGet }),\n    });\n  };\n  const origSubscribe = atom.patchedStore.subscribe;\n  let subscribeCount = 0;\n  atom.patchedStore.subscribe = (callback: () => void) => {\n    const unsubscribe = origSubscribe(callback);\n    if (subscribeCount === 0) {\n      evaluate();\n    }\n    subscribeCount += 1;\n    return () => {\n      unsubscribe();\n      subscribeCount -= 1;\n      if (subscribeCount === 0) {\n        unsubscribes.forEach((unsub) => unsub());\n        unsubscribes.splice(0, unsubscribes.length);\n        atoms.splice(0, atoms.length);\n      }\n    };\n  };\n  atom.patchedStore.dispatch = ((action: Action<State>) => {\n    if (action.type === 'SetState') {\n      if (typeof action.setState === 'function') {\n        throw new Error('function update is not allowed');\n      }\n      if (!options.set) {\n        throw new Error('not writable selector');\n      }\n      options.set({ get: setGet, set: setSet }, action.setState);\n    }\n    return action;\n  }) as Dispatch<Action<State | null>>;\n  return {\n    ...atom,\n    symbol: ATOM_SYMBOL,\n    key: options.key,\n    initialState: null,\n    writable: !!options.set,\n  };\n};\n","import { useTrackedState } from 'reactive-react-redux';\n\nimport { Atom } from '../createAtom';\n\nexport const useRecoilValue = <State>(atom: Atom<State>) => useTrackedState(atom.patchedStore);\n","import { useCallback } from 'react';\n\nimport { Atom, Action } from '../createAtom';\n\nexport const useResetRecoilState = <State>(\n  atom: Atom<State> & { initialState: State },\n) => {\n  const resetState = useCallback(() => {\n    const action: Action<State> = {\n      type: 'SetState',\n      setState: atom.initialState,\n    };\n    atom.patchedStore.dispatch(action);\n  }, [atom]);\n  return resetState;\n};\n","import { SetStateAction, useCallback } from 'react';\n\nimport { Atom, Action } from '../createAtom';\n\nexport const useSetRecoilState = <State>(atom: Atom<State>) => {\n  const setState = useCallback((setStateAction: SetStateAction<State>) => {\n    const action: Action<State> = {\n      type: 'SetState',\n      setState: setStateAction,\n    };\n    atom.patchedStore.dispatch(action);\n  }, [atom]);\n  return setState;\n};\n"],"names":["createAtom","initialState","store","createStore","state","action","type","setState","patchedStore","patchStore","useAtom","atom","useTrackedState","useCallback","setStateAction","dispatch","ATOM_SYMBOL","Symbol","useRecoilState","React","Fragment","children","options","symbol","key","writable","x","e","atoms","unsubscribes","getGet","a","includes","push","subscribe","evaluate","getState","setGet","setSet","v","origDispatch","get","origSubscribe","subscribeCount","callback","unsubscribe","forEach","unsub","splice","length","Error","set"],"mappings":"qIAaaA,EAAa,SAAQC,GAChC,IASMC,EAAQC,cATE,SAACC,EAAsBC,GACrC,gBADeD,IAAAA,EAAQH,GAClBI,GAA0B,aAAhBA,EAAOC,KAGS,mBAApBD,EAAOE,SACRF,EAAOE,SAAyCH,GAEnDC,EAAOE,SALLH,IASX,MAAO,CAAEI,aADYC,aAAWP,KCnBrBQ,EAAU,SAAQC,GAS7B,MAAO,CAROC,kBAAgBD,EAAKH,cAClBK,cAAY,SAACC,GAK5BH,EAAKH,aAAaO,SAJY,CAC5BT,KAAM,WACNC,SAAUO,KAGX,CAACH,yNCXOK,EAAcC,SCAdC,EAAiBR,qBCGM,mBAClCS,gBAACA,EAAMC,gBAD8BC,wBFDnB,SAClBC,GAGA,cADUtB,EAAWsB,gBAGnBC,OAAQP,EACRQ,IAAKF,EAAQE,IACbvB,aAAcqB,UACdG,UAAU,gDGXe,SAACC,GAC5B,IACE,OAAQA,EAA0BH,SAAWP,EAC7C,MAAOW,GACP,4BCaoB,SACtBL,GAEA,IAAMM,EAAyB,GACzBC,EAA+B,GAC/BC,EAAS,SAAIC,GAKjB,OAJKH,EAAMI,SAASD,KAClBH,EAAMK,KAAKF,GACXF,EAAaI,KAAKF,EAAEvB,aAAa0B,UAAUC,KAEtCJ,EAAEvB,aAAa4B,YAElBC,EAAS,SAAIN,UAAeA,EAAEvB,aAAa4B,YAC3CE,EAAS,SAAIP,EAAYQ,GAC7BR,EAAEvB,aAAaO,SAAS,CACtBT,KAAM,WACNC,SAAUgC,KAIR5B,EAAOX,EAAW,MAClBwC,EAAe7B,EAAKH,aAAaO,SACjCoB,wCAGcb,EAAQmB,IAAI,CAAEA,IAAKX,sBAFrCU,EAAa,CACXlC,KAAM,WACNC,eAHU,oCAMRmC,EAAgB/B,EAAKH,aAAa0B,UACpCS,EAAiB,EA6BrB,OA5BAhC,EAAKH,aAAa0B,UAAY,SAACU,GAC7B,IAAMC,EAAcH,EAAcE,GAKlC,OAJuB,IAAnBD,GACFR,IAEFQ,GAAkB,aAEhBE,IAEuB,IADvBF,GAAkB,KAEhBd,EAAaiB,QAAQ,SAACC,UAAUA,MAChClB,EAAamB,OAAO,EAAGnB,EAAaoB,QACpCrB,EAAMoB,OAAO,EAAGpB,EAAMqB,WAI5BtC,EAAKH,aAAaO,SAAY,SAACV,GAC7B,GAAoB,aAAhBA,EAAOC,KAAqB,CAC9B,GAA+B,mBAApBD,EAAOE,SAChB,UAAU2C,MAAM,kCAElB,IAAK5B,EAAQ6B,IACX,UAAUD,MAAM,yBAElB5B,EAAQ6B,IAAI,CAAEV,IAAKJ,EAAQc,IAAKb,GAAUjC,EAAOE,UAEnD,OAAOF,UAGJM,OACHY,OAAQP,EACRQ,IAAKF,EAAQE,IACbvB,aAAc,KACdwB,WAAYH,EAAQ6B,yEC9EM,SAAQxC,UAAsBC,kBAAgBD,EAAKH,2CCA9C,SACjCG,GASA,OAPmBE,cAAY,WAK7BF,EAAKH,aAAaO,SAJY,CAC5BT,KAAM,WACNC,SAAUI,EAAKV,gBAGhB,CAACU,+BCT2B,SAAQA,GAQvC,OAPiBE,cAAY,SAACC,GAK5BH,EAAKH,aAAaO,SAJY,CAC5BT,KAAM,WACNC,SAAUO,KAGX,CAACH"}